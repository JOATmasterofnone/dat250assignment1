/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hvl.dat250exp1.exp1;

import io.javalin.Javalin;
import java.util.logging.Logger;

public class App {
	
	private static final Logger logger = Logger.getLogger(App.class.getName());
    
	public String getGreeting() {
		
		return "Hello Good People! Rashaad is struggling now but it'll be fine";
	}
	

    private static final String WEBPAGE = "<!DOCTYPE html>\n" +
            "<html lang=\"en\">\n" +
            "<head>\n" +
            "    <meta charset=\"UTF-8\">\n" +
            "    <title>Convert units</title>\n" +
            "</head>\n" +
            "<body>\n" +
            "<h1>Unit converter</h1>\n" +
            "<form action=\"/convert\" method=\"post\">\n" +
            "    <fieldset>\n" +
            "    <label for=\"val\">Value:</label>" +
            "    <input id=\"val\" type=\"text\" name=\"value\"><br />\n" +
            "    <label for=\"source-unit\">From unit:</label>\n" +
            "    <select name=\"sunit\" id=\"source-unit\">\n" +
            "        <option value=\"in\">Inches</option>\n" +
            "        <option value=\"ft\">Feet</option>\n" +
            "        <option value=\"mi\">Miles</option>\n" +
            "        <option value=\"m\">Metres</option>\n" +
            "    </select><br />\n" +
            "    <label for=\"target-unit\">To unit:</label>\n" +
            "    <select name=\"tunit\" id=\"target-unit\">\n" +
            "        <option value=\"in\">Inches</option>\n" +
            "        <option value=\"ft\">Feet</option>\n" +
            "        <option value=\"mi\">Miles</option>\n" +
            "        <option value=\"m\">Metres</option>\n" +
            "    </select><br />\n" +
            "    <input type=\"submit\" value=\"Calculate\" />\n" +
            "    </fieldset>\n" +
            "</form>\n" +
            "</body>\n" +
            "</html>";

    protected static final double IN_TO_METER = 0.0254;
    protected static final double FT_TO_METER = 0.3048;
    protected static final double MI_TO_METER = 1609.344;

    
    /**
     * Converts a value from meters to the specified target unit.
     *
     * <p>This method performs the unit conversion by multiplying the input value by the appropriate
     * conversion factor for the target unit. The target unit is specified by the {@code toUnit} parameter.</p>
     *
     * @param value    The value in meters to be converted.
     * @param toUnit   The target unit to which the value should be converted.
     *                 Acceptable values are "in" for inches, "ft" for feet, "mi" for miles, and "m" for meters.
     * @return         The value converted to the target unit, or Double.NaN if the target unit is not recognized.
     */
    protected static double multiply(double value, String toUnit) {
    	
    	double result;
	    if (toUnit.equals("in")) {
	    	result = value * IN_TO_METER;
	    } else if (toUnit.equals("ft")) {
	    	result = value * FT_TO_METER;
	    } else if (toUnit.equals("mi")) {
	    	result = value * MI_TO_METER;
	    } else if (toUnit.equals("m")) {
	    	result = value;
	    } else {
	    	result = Double.NaN;
	    }
	    
    	return result;
    }
    
    /**
     * Divides a given value by the conversion constant related to the target unit.
     * 
     * <p>This method takes a value assumed to be in meters and converts it to the
     * target unit specified by the parameter {@code toUnit}. The target unit can be one
     * of "in" (inches), "ft" (feet), "mi" (miles), or "m" (meters). If the unit is not 
     * one of these, the method returns {@code Double.NaN}.</p>
     *
     * @param value   The value to be converted, assumed to be in meters.
     * @param toUnit  The unit to convert the value to. Valid values are "in", "ft", "mi", and "m".
     * @return        The value converted to the target unit, or {@code Double.NaN} if the unit is invalid.
     */
    protected static double divide(double value, String toUnit ) {
    	
        double result;
        if (toUnit.equals("in")) {
            result = value / IN_TO_METER;
        } else if (toUnit.equals("ft")) {
            result = value / FT_TO_METER;
        } else if (toUnit.equals("mi")) {
            result = value / MI_TO_METER;
        } else if (toUnit.equals("m")) {
            result = value;
        } else {
            result = Double.NaN;
        }
        return result;

    }
    
    /**
     * Converts a value from meters or to meters based on the unit parameters provided.
     *
     * <p>This method serves as a wrapper for two other methods: {@code multiply} and {@code divide}.
     * If the {@code fromUnit} is "m" (meters), the method will call {@code multiply} to convert
     * the value to the target unit specified by {@code ToUnit}. Otherwise, it assumes that the value
     * is already in meters and calls {@code divide} to perform the conversion.</p>
     *
     * @param value     The numerical value to be converted.
     * @param fromUnit  The unit from which the value is to be converted. This is only used to check if the value is in meters.
     * @param ToUnit    The target unit to which the value is to be converted.
     * @return          The value converted to the target unit.
     */
    protected static double convertIt(double value, String fromUnit, String ToUnit) {
        if (fromUnit.equals("m")) {
            return multiply(value, ToUnit);
        } else {
            return divide(value, ToUnit);
        }
    }

    
    public static void main(String[] args) {
        Javalin.create()
                .get("/", ctx -> {
                    ctx.html(WEBPAGE);
                })
                .post("/convert", ctx -> {
                    double value = Double.parseDouble(ctx.formParam("value"));
                    String fromUnit = ctx.formParam("sunit");
                    String toUnit = ctx.formParam("tunit");
                    double result = convertIt(value, fromUnit, toUnit);
                    ctx.result(Double.toString(result));
                })
                .start(9000);
    }

}

